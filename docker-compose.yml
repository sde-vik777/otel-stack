version: '3.8'

services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.111.0
    container_name: otel-collector-c8
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./observability/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    networks:
      - otel-network
    depends_on:
      jaeger:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "--timeout=5", "http://localhost:13133/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.62
    container_name: jaeger-c8
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
    networks:
      - otel-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--timeout=5", "http://localhost:16686"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus-c8
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - otel-network
    user: "65534:65534"  # Security improvement

  # Grafana
  grafana:
    image: grafana/grafana:11.3.1
    container_name: grafana-c8
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - otel-network
    user: "472:0"  # Security improvement

  # Loki
  loki:
    image: grafana/loki:3.2.1
    container_name: loki-c8
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/tmp/loki
      - ./observability/loki-config.yaml:/etc/loki/local-config.yaml:ro
    networks:
      - otel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "--timeout=5", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - Fixed version instead of latest
  promtail:
    image: grafana/promtail:3.2.1
    container_name: promtail-c8
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./observability/promtail-config.yml:/etc/promtail/config.yml:ro
    depends_on:
      - loki
    networks:
      - otel-network
    restart: unless-stopped

volumes:
  postgres_data:
  app_logs:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  otel-network:
    driver: bridge